# Running mokctl using docker - Just set up an alias!
screencast paste
alias mokctl='docker run --rm --privileged -ti -v /var/run/docker.sock:/var/run/docker.sock -v ~/.mok/:/root/.mok/ -e TERM=xterm-256color mclarkson/mokctl'
screencast paste
# Add that to your '~/.bashrc' and/or '~/.zshrc' to make permanent
screencast paste
# The docker container image will be downloaded on first run
# Let's use mokctl now...
mokctl -h
mokctl build
# Must build an image first. Takes a few minutes on first use.
mokctl build image
mokctl get -h
mokctl get clusters
mokctl create
# Create a cluster, without setting up kubernetes
mokctl create cluster myk8s --skipmastersetup 1 0
mokctl get cluster
# Let's take a look inside
mokctl exec -h
screencast subshell
mokctl exec
ps axf
rpm -qa | grep kube
# Do kubernetes-the-hard-way now :)
screencast subshell
exit
mokctl delete cluster -h
screencast subshell
mokctl delete cluster myk8s
screencast firstps
y
# Create a real kubernetes cluster - This will take a few minutes!
mokctl create -h
mokctl create cluster myk8s 1 1
export KUBECONFIG=~/.mok/admin-myk8s.conf
docker ps
kubectl get pods -A
kubectl get nodes
# Wait for k8s to settle
sleep 40
kubectl get pods -A
# Wait a bit longer...
sleep 40
kubectl get pods -A
screencast prompt #%$
kubectl run -ti --image busybox --restart=Never busybox1 sh
screencast prompt #%$
ping -c 3 8.8.8.8
screencast prompt #%$
ip address
exit
kubectl get pods -o wide
mokctl get cluster
screencast subshell
mokctl delete cluster myk8s
screencast firstps
y
# Thanks for watching!
